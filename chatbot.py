# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1P0vRaH6mqLhVzXnqAelIC0u0AJiwtaM6
"""

import numpy as np
from sklearn.metrics.pairwise import cosine_similarity
# converting the user query unto vectors
def get_embedding(text):
    return transformer_model.encode(text)

# finding the most similar answer
def find_best_answer(question, history):
    question_embedding = get_embedding(question)
    best_similarity = 0
    best_answer = "عذرًا، ليس لدي معلومات حول هذا الأمر راجع أحد المشايخ الموثوقين."

    for item in embeddings:
        similarity = cosine_similarity([question_embedding], [item['embedding']])[0][0]
        if similarity > best_similarity:
            best_similarity = similarity
            best_answer = item['metadata'].get("answer") or item['metadata'].get("content") or item['text'] or best_answer

    # if the similarity rate less than 75%, the question is not in the range of ansewrs
    if best_similarity < 0.75:
        best_answer = "عذرًا، ليس لدي معلومات حول هذه المسألة راجع أحد المشايخ الموثوقين."

    # updating history
    history.append((question, best_answer))
    return best_answer, history

# creating Gradio graphical interface
with gr.Blocks() as demo:
    gr.Markdown("### شات بوت للإجابة عن الأحكام الشرعية للصلاة")
    gr.Markdown("💡 تحذير هذاالشات بوت للأغراض التعليمية, إذا أردت معرفة الأحكام الشرعية اسأل أحد المشايخ الموثوقين, قال تعالى: (فاسألوا أهل الذكر إن كنتم لاتعلمون)!")
    chat_history = gr.State([])
    with gr.Row():
        with gr.Column():
            question = gr.Textbox(placeholder="اسألني سؤالاً عن أحكام الصلاة ...")
            send_button = gr.Button("إرسال")
        with gr.Column():
            answer = gr.Textbox(interactive=False)

    send_button.click(fn=find_best_answer, inputs=[question, chat_history], outputs=[answer, chat_history])

# running the app
demo.launch(share=True)